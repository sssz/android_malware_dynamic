from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score

from data_loader import vectorization_main



def train():
    X_train, X_test, y_train, y_test = vectorization_main()
    classifier=RandomForestClassifier(random_state=0)
    classifier.fit(X_train, y_train)
    #score = classifier.score(X_test, y_test)
    y_pred = classifier.predict(X_test)
    acc = accuracy_score(y_test, y_pred)
    precision = precision_score(y_test, y_pred)
    recall = recall_score(y_test, y_pred)
    f1 = f1_score(y_test, y_pred)
    print(acc, precision, recall, f1)
    return acc, precision, recall, f1

def evaluate():
    result = []
    try_cnt = 30
    for i in range(try_cnt):
        result.append(train())
    acc = sum([result[i][0] for i in range(try_cnt)])/try_cnt
    pre = sum([result[i][1] for i in range(try_cnt)])/try_cnt
    rec = sum([result[i][2] for i in range(try_cnt)])/try_cnt
    f1 = sum([result[i][3] for i in range(try_cnt)])/try_cnt
    print(acc, pre, rec, f1) 
    #0.9604635310156779 0.966719876336477 0.8997544401225606 0.9318782426822927

if __name__ == "__main__":
    #train()
    evaluate()