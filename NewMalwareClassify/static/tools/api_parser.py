import re
import os
import json

class api_parser():
    def __init__(self):
        self.load_config()

    def load_config(self):
        #permission
        config_root = os.path.join(os.path.dirname(os.path.dirname(__file__)), "static_config")

        api_file = os.path.join(config_root, "apis.json")
        with open(api_file, "r") as f:
            api_list = json.load(f)
        self.api_dict = {}
        for api in api_list['hookConfigs']:
            key = api['class_name'] + "->" + ("stub_method" if api['method'] is None else api['method'])
            self.api_dict[key] = api
        print("number of apis:", len(self.api_dict))

    def parse_apis(self, app_apis):
        result = []
        for (api_sign, api) in app_apis.items():
            key = api['class_name'] + "->" + api['method']
            stub_key = api['class_name'] + "->" + 'stub_method'
            if key in self.api_dict or stub_key in self.api_dict:
                result.append(self.api_dict[key])
        return result

API_PARSER = api_parser()