#encoding='UTF-8'
#从manifest 中抽取特征
from androguard.core.bytecodes import apk, dvm
from androguard.core.analysis import analysis

from static.tools.string_parser import STRING_PARSER

def parse_permissions(app):
    manifest_permissions = app.get_permissions()
    tmp = []
    for perm in manifest_permissions:
        if STRING_PARSER.parse_permission(perm):
            tmp.append(perm)
    return tmp

def parse_hardware_features(app):
    hardware_features = app.get_features()
    tmp = []
    for hardware in hardware_features:
        if STRING_PARSER.parse_hardware(hardware):
            tmp.append(hardware)
    return tmp

def parse_intent_filter(app):
    intent_action = {}
    activities = app.get_activities()
    for act in activities:
        for action in app.get_intent_filters("activity", act).get('action', []):
            intent_action[action] = intent_action.get(action, 0) + 1

    services = app.get_services()
    for ser in services:
        for action in app.get_intent_filters("service", ser).get('action', []):
            intent_action[action] = intent_action.get(action, 0) + 1

    providers = app.get_providers()
    for pro in providers:
        for action in app.get_intent_filters("provider", pro).get('action', []):
            intent_action[action] = intent_action.get(action, 0) + 1

    receivers = app.get_receivers()
    for rec in receivers:
        for action in app.get_intent_filters("receiver", rec).get('action', []):
            intent_action[action] = intent_action.get(action, 0) + 1

    tmp = []
    for action in intent_action:
        if STRING_PARSER.parse_intent_action(action):
            tmp.append(action)
    return tmp

def static_manifest(app, result):

    manifest_permissions = parse_permissions(app)
    hardware_features = parse_hardware_features(app)
    intent_action = parse_intent_filter(app)


    result['manifest'] = {
        "permissions": manifest_permissions, 
        "used_features": hardware_features,
        "intent_action": intent_action
    }
    #print(manifest_permissions)
    #print(hardware_features)

